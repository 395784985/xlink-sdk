
# 微信应用-设备授权管理

	用于将设备在微信平台进行授权。 在管理台的微信应用中进行设备授权导入，云智易平台自动将设备在微信平台上进行授权，并将设备导入云智易平台。

## **接口概览**

1. 微信授权配置
2. 新增授权设备
3. 批量新增授权设备
4. 查询授权设备列表
5. 再次授权设备


## **接口详情**

### **1. 微信授权配置**

	设置微信设备授权相关的配置，平台根据配置的信息向微信服务器进行设备授权。

**Requeset**

URL

	POST /v2/developer/app/{app_id}/wechat_auth/product/{product_id}/config

Header

	Content-Type : "application/json"
	Access-Token : "调用凭证"

Content

	{
	    "auth_key": "",
	    "close_strategy": "1",
	    "conn_strategy": "1",
	    "crypt_method": "0",
	    "auth_ver": "1"
	}

具体参数说明见微信文档:http://iot.weixin.qq.com/wiki/index.html

**Response**

Header
	
	HTTP/1.1 200 OK
	
Content

	{
	    "auth_key": "",
	    "close_strategy": "1",
	    "conn_strategy": "1",
	    "crypt_method": "0",
	    "auth_ver": "1"
	}

### **2. 新增授权设备** 
	
	在某个产品下添加一个要授权的设备，添加后系统会自动将设备信息向微信平台进行授权。
	注：必须先配置好产品的微信授权配置才可新增授权设备。

**Request**

URL

	POST /v2/developer/app/{app_id}/wechat_auth/product/{product_id}/device

Header

	Content-Type : "application/json"
	Access-Token : "调用凭证"

Content
	
	{
	    "mac": "ABCDEFABCDEF"
	}


**Response**

Header

	HTTP/1.1 200 OK

Content

	无


### **3. 批量新增授权设备** 

	批量新增授权设备，可一次添加多个设备并进行微信授权。

**Request**

URL

	POST /v2/developer/app/{app_id}/wechat_auth/product/{product_id}/device_batch

Header

	Content-Type : "application/json"
	Access-Token : "调用凭证"

Content

	["mac1","mac2", "mac3"]


**Response**

Header

	HTTP/1.1 200 OK

Content

	无

### **4. 查询授权设备列表**

	查询授权设备列表，可查看设备的授权状态。

**Request**

URL

	POST /v2/developer/app/{app_id}/wechat_auth/product/{product_id}/devices

Header

	Content-Type : "application/json"
	Access-Token : "调用凭证"

Content

	{
	    "offset": "请求的列表偏移量",
	    "limit": "请求的列表数量",
	    "query": {
	        "field1": {
	            "$in": [
	                " 字段值",
	                " 字段值"
	            ]
	        },
	        "field2": "字段值"
	    },
	    "order": {
	        "filed1": "desc",
	        "filed2": "asc"
	    }
	}


字段 | 是否必须 | 描述
---- | ---- | ----
offset | 否 | 从某个偏移量开始请求，默认为0
limit | 否 | 请求的条目数量，默认为10
query | 否 | 查询条件，可以根据不同字段加上不同的比较指令来查询，查询条件字段包含设备所有默认字段，不支持扩展属性字段，支</br>持比较指令包含如下:</br>$in：包含于该列表任意一个值</br>$lt：小于该字段值</br>$lte：小于或等于字段值</br>$gt：大于该字段值</br>$gte：大于或等于该字段值</br>$like：模糊匹配该字段值
order | 否 | 可以指定通过设备默认的某个字段排序，desc降序，asc升序

**Response**

Header
	
	HTTP/1.1 200 OK

Content

	{
	    "count": "总数",
	    "list": [
	        {
	            "device_id": "设备ID",
	            "app_id": "应用ID",
	            "product_id": "产品ID",
	            "mac": "MAC地址",
	            "w_device_id": "微信设备ID",
	            "w_device_type": "微信设备类型",
	            "status": "授权状态"
	        }
	    ]
	}

字段 | 是否必须 | 描述
---- | ---- | ---- 
device_id | 是 | 设备ID
app_id | 是 | 应用ID
product_id | 是 | 产品ID
mac | 是 | MAC地址
w_device_id | 是 | 由微信分配的设备ID
w_device_type | 是 | 由微信分配的设备类型
status | 是 | 授权状态，见<a href="#appendix">附录</a>

## **5. 再次授权设备**

	可以选择某一个或多个设备进行重新授权。

**Request**

URL

	POST /v2/developer/app/{app_id}/wechat_auth/product/{product_id}/device_auth

Header

	Content-Type : "application/json"
	Access-Token : "调用凭证"

Content

	[
	    "device_id1",
	    "device_id2",
	    "device_id3"
	]

**Response**

Header

	HTTP/1.1 200 OK
	
Content

	无


## <a name = "appendix">**附录**</a>

**授权状态**

枚举值 | 说明
0 | 未授权
1 | 已授权
